{
	"__metadata": {
		"galleryApiUrl": "https://marketplace.visualstudio.com/_apis/public/gallery",
		"id": "690b692e-e8a9-493f-b802-8089d50ac1b2",
		"publisherId": "5f5636e7-69ed-4afe-b5d6-8d231fb3d3ee",
		"publisherDisplayName": "Microsoft",
		"installCount": 110120,
		"versions": [
			{
				"version": "0.7.0",
				"date": "2016-06-24T18:49:19.39Z",
				"downloadHeaders": {
					"X-Market-Client-Id": "VSCode 1.2.1",
					"User-Agent": "VSCode 1.2.1",
					"X-Market-User-Id": "2c22effbd6a39de6d706c24e52fca5cc95ad4c7076fd7733e713c79f4cb24d56"
				},
				"downloadUrl": "https://ms-vscode.gallery.vsassets.io/_apis/public/gallery/publisher/ms-vscode/extension/cpptools/0.7.0/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage?install=true",
				"manifestUrl": "https://ms-vscode.gallery.vsassets.io/_apis/public/gallery/publisher/ms-vscode/extension/cpptools/0.7.0/assetbyname/Microsoft.VisualStudio.Code.Manifest"
			},
			{
				"version": "0.6.1",
				"date": "2016-06-06T22:09:16.477Z",
				"downloadHeaders": {
					"X-Market-Client-Id": "VSCode 1.2.1",
					"User-Agent": "VSCode 1.2.1",
					"X-Market-User-Id": "2c22effbd6a39de6d706c24e52fca5cc95ad4c7076fd7733e713c79f4cb24d56"
				},
				"downloadUrl": "https://ms-vscode.gallery.vsassets.io/_apis/public/gallery/publisher/ms-vscode/extension/cpptools/0.6.1/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage/Microsoft.VisualStudio.Services.VSIXPackage?install=true",
				"manifestUrl": "https://ms-vscode.gallery.vsassets.io/_apis/public/gallery/publisher/ms-vscode/extension/cpptools/0.6.1/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage/Microsoft.VisualStudio.Code.Manifest"
			},
			{
				"version": "0.6.0",
				"date": "2016-05-26T18:29:37.89Z",
				"downloadHeaders": {
					"X-Market-Client-Id": "VSCode 1.2.1",
					"User-Agent": "VSCode 1.2.1",
					"X-Market-User-Id": "2c22effbd6a39de6d706c24e52fca5cc95ad4c7076fd7733e713c79f4cb24d56"
				},
				"downloadUrl": "https://ms-vscode.gallery.vsassets.io/_apis/public/gallery/publisher/ms-vscode/extension/cpptools/0.6.0/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage/Microsoft.VisualStudio.Services.VSIXPackage?install=true",
				"manifestUrl": "https://ms-vscode.gallery.vsassets.io/_apis/public/gallery/publisher/ms-vscode/extension/cpptools/0.6.0/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage/Microsoft.VisualStudio.Code.Manifest"
			},
			{
				"version": "0.5.0",
				"date": "2016-04-15T19:31:27.447Z",
				"downloadHeaders": {
					"X-Market-Client-Id": "VSCode 1.2.1",
					"User-Agent": "VSCode 1.2.1",
					"X-Market-User-Id": "2c22effbd6a39de6d706c24e52fca5cc95ad4c7076fd7733e713c79f4cb24d56"
				},
				"downloadUrl": "https://ms-vscode.gallery.vsassets.io/_apis/public/gallery/publisher/ms-vscode/extension/cpptools/0.5.0/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage/Microsoft.VisualStudio.Services.VSIXPackage?install=true",
				"manifestUrl": "https://ms-vscode.gallery.vsassets.io/_apis/public/gallery/publisher/ms-vscode/extension/cpptools/0.5.0/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage/Microsoft.VisualStudio.Code.Manifest"
			},
			{
				"version": "0.4.2",
				"date": "2016-04-01T00:52:52.227Z",
				"downloadHeaders": {
					"X-Market-Client-Id": "VSCode 1.2.1",
					"User-Agent": "VSCode 1.2.1",
					"X-Market-User-Id": "2c22effbd6a39de6d706c24e52fca5cc95ad4c7076fd7733e713c79f4cb24d56"
				},
				"downloadUrl": "https://ms-vscode.gallery.vsassets.io/_apis/public/gallery/publisher/ms-vscode/extension/cpptools/0.4.2/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage/Microsoft.VisualStudio.Services.VSIXPackage?install=true",
				"manifestUrl": "https://ms-vscode.gallery.vsassets.io/_apis/public/gallery/publisher/ms-vscode/extension/cpptools/0.4.2/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage/Microsoft.VisualStudio.Code.Manifest"
			},
			{
				"version": "0.4.1",
				"date": "2016-03-30T01:27:12.87Z",
				"downloadHeaders": {
					"X-Market-Client-Id": "VSCode 1.2.1",
					"User-Agent": "VSCode 1.2.1",
					"X-Market-User-Id": "2c22effbd6a39de6d706c24e52fca5cc95ad4c7076fd7733e713c79f4cb24d56"
				},
				"downloadUrl": "https://ms-vscode.gallery.vsassets.io/_apis/public/gallery/publisher/ms-vscode/extension/cpptools/0.4.1/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage/Microsoft.VisualStudio.Services.VSIXPackage?install=true",
				"manifestUrl": "https://ms-vscode.gallery.vsassets.io/_apis/public/gallery/publisher/ms-vscode/extension/cpptools/0.4.1/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage/Microsoft.VisualStudio.Code.Manifest"
			}
		]
	},
	"name": "cpptools",
	"displayName": "C/C++",
	"description": "Complete C/C++ language support including code-editing and debugging.",
	"version": "0.7.0",
	"publisher": "ms-vscode",
	"preview": true,
	"icon": "icon.svg",
	"readme": "README.md",
	"author": {
		"name": "Microsoft Corporation"
	},
	"license": "SEE LICENSE IN LICENSE.md",
	"engines": {
		"vscode": "^0.10.8"
	},
	"bugs": {
		"url": "https://github.com/Microsoft/vscppsamples/issues"
	},
	"keywords": [
		"C",
		"C++"
	],
	"categories": [
		"Languages",
		"Debuggers"
	],
	"activationEvents": [
		"*"
	],
	"main": "./out/src/main",
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "C/C++ Configuration",
			"properties": {
				"C_Cpp.clang_format_path": {
					"type": [
						"string",
						"null"
					],
					"default": null,
					"description": "full path to clang-format tool"
				}
			}
		},
		"commands": [
			{
				"command": "C_Cpp.ConfigurationSelect",
				"title": "C/Cpp: Select a Configuration"
			},
			{
				"command": "C_Cpp.ConfigurationEdit",
				"title": "C/Cpp: Edit Configurations"
			},
			{
				"command": "C_Cpp.UnloadLanguageServer",
				"title": "C/Cpp: UnloadLanguageServer"
			},
			{
				"command": "C_Cpp.SwitchHeaderSource",
				"title": "C/Cpp: Switch Header/Source"
			}
		],
		"keybindings": [
			{
				"command": "C_Cpp.SwitchHeaderSource",
				"key": "f4",
				"when": "editorTextFocus"
			}
		],
		"debuggers": [
			{
				"type": "cppdbg",
				"label": "C++ (GDB)",
				"enableBreakpointsFor": {
					"languageIds": [
						"cpp",
						"c",
						".h",
						".cc",
						".cxx",
						".hpp",
						".hh",
						".hxx"
					]
				},
				"program": "./debugAdapters/OpenDebugAD7",
				"windows": {
					"program": "./debugAdapters/bin/OpenDebugAD7.exe"
				},
				"aiKey": "AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217",
				"variables": {
					"pickProcess": "extension.pickNativeProcess"
				},
				"initialConfigurations": [
					{
						"name": "C++ Launch (GDB)",
						"type": "cppdbg",
						"request": "launch",
						"targetArchitecture": "x64",
						"program": "enter program name, for example ${workspaceRoot}/a.out",
						"args": [],
						"stopAtEntry": false,
						"cwd": "${workspaceRoot}",
						"environment": [],
						"externalConsole": true
					},
					{
						"name": "C++ Attach (GDB)",
						"type": "cppdbg",
						"request": "launch",
						"targetArchitecture": "x64",
						"program": "enter program name, for example ${workspaceRoot}/a.out",
						"args": [],
						"stopAtEntry": false,
						"cwd": "${workspaceRoot}",
						"environment": [],
						"processId": "enter program's process ID",
						"externalConsole": false
					}
				],
				"configurationAttributes": {
					"launch": {
						"required": [
							"program",
							"name",
							"type",
							"request"
						],
						"properties": {
							"program": {
								"type": "string",
								"description": "Workspace relative path to the program to launch.",
								"default": "program.exe"
							},
							"args": {
								"type": "array",
								"description": "Command line arguments passed to the program.",
								"items": {
									"type": "string"
								},
								"default": []
							},
							"type": {
								"type": "string",
								"description": "The type of the engine. Must be \"cppdbg\"",
								"default": "cppdbg"
							},
							"request": {
								"type": "string",
								"description": "The type debug session. Must be \"launch\"",
								"default": "launch"
							},
							"targetArchitecture": {
								"type": "string",
								"description": "The architecture of the debuggee. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64",
								"default": "x64"
							},
							"cwd": {
								"type": "string",
								"description": "The working directory of the target",
								"default": "."
							},
							"setupCommands": {
								"type": "array",
								"description": "One or more GDB/LLDB/CLRDBG commands to execute in order to setup the underlying debugger. Example: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }]",
								"items": {
									"type": "object",
									"properties": {
										"text": {
											"type": "string",
											"description": "The debugger command to execute.",
											"default": ""
										},
										"description": {
											"type": "string",
											"description": "Optional description for the command",
											"default": ""
										},
										"ignoreFailures": {
											"type": "boolean",
											"description": "If true, failures from the command should be ignored. Default value is false",
											"default": "false"
										}
									}
								},
								"default": []
							},
							"customLaunchSetupCommands": {
								"type": "array",
								"description": "If provided, this replaces the default commands used to launch a target with some other commands. For example, this can be \"-target-attach\" in order to attach to a target process. An empty command list replaces the launch commands with nothing, which can be useful if the debugger is being provided launch options as command line options. Example: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }]",
								"items": {
									"type": "object",
									"properties": {
										"text": {
											"type": "string",
											"description": "The debugger command to execute.",
											"default": ""
										},
										"description": {
											"type": "string",
											"description": "Optional description for the command",
											"default": ""
										},
										"ignoreFailures": {
											"type": "boolean",
											"description": "If true, failures from the command should be ignored. Default value is false",
											"default": ""
										}
									}
								},
								"default": []
							},
							"launchCompleteCommand": {
								"enum": [
									"exec-run",
									"exec-continue",
									"None"
								],
								"description": "The command to execute after the debugger is fully setup in order to cause the target process to run. Allowed values are \"exec-run\", \"exec-continue\", \"None\". The default value is \"exec-run\".",
								"default": "exec-run"
							},
							"visualizerFile": {
								"type": "string",
								"description": ".natvis file to be used when debugging this process",
								"default": ""
							},
							"environment": {
								"type": "array",
								"description": "Environment variables to add to the environment for the program. Example: { \"name\": \"squid\", \"value\": \"clam\" }",
								"items": {
									"type": "object",
									"properties": {
										"name": "string",
										"value": "string"
									}
								},
								"default": []
							},
							"additionalSOLibSearchPath": {
								"type": "string",
								"description": "Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\"",
								"default": ""
							},
							"MIMode": {
								"type": "string",
								"description": "Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\" \"clrdbg\"",
								"default": "gdb"
							},
							"miDebuggerPath": {
								"type": "string",
								"description": "The path the mi debugger (such as gdb).",
								"default": "/usr/bin/gdb"
							},
							"miDebuggerServerAddress": {
								"type": "string",
								"description": "Network address of the MI Debugger Server to connect to (example: localhost:1234).",
								"default": "serveraddress:port"
							},
							"processId": {
								"type": "integer",
								"description": "Optional process id to attach the debugger to. Note that some platforms require administrator privledges in order to attach to a process.",
								"default": "0"
							},
							"stopAtEntry": {
								"type": "boolean",
								"description": "Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.",
								"default": false
							},
							"debugServerPath": {
								"type": "string",
								"description": "Optional full path to debug server to launch. Defaults to null",
								"default": ""
							},
							"debugServerArgs": {
								"type": "string",
								"description": "Optional debug server args. Defaults to null",
								"default": ""
							},
							"serverStarted": {
								"type": "string",
								"description": "Optional server-started pattern to look for in the debug server output. Defaults to null",
								"default": ""
							},
							"filterStdout": {
								"type": "boolean",
								"description": "Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true",
								"default": "true"
							},
							"filterStderr": {
								"type": "boolean",
								"description": "Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false",
								"default": "false"
							},
							"serverLaunchTimeout": {
								"type": "integer",
								"description": "Optional time, in milliseconds, for the debugger to wait for the debugServer to start up. Default is 10000",
								"default": "10000"
							},
							"coreDumpPath": {
								"type": "string",
								"description": "Optional full path to a core dump file for the specified program. Defaults to null.",
								"default": ""
							},
							"externalConsole": {
								"type": "boolean",
								"description": "If true, a console is launched for the debuggee. If false, no console is launched. Note this option is ignored in some cases for technical reasons.",
								"default": "false"
							}
						}
					}
				}
			}
		],
		"jsonValidation": [
			{
				"fileMatch": "c_cpp_properties.json",
				"url": "./c_cpp_properties.schema.json"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "node ./node_modules/vscode/bin/compile && npm test && node ./out/src/Debugger/copyScript.js",
		"pretest": "node ./node_modules/vscode/bin/compile",
		"test": "mocha -u tdd ./out/test",
		"compile": "node ./node_modules/vscode/bin/compile -watch -p ./",
		"postinstall": "node ./node_modules/vscode/bin/install"
	},
	"devDependencies": {
		"typescript": "^1.7.5",
		"vscode": "^0.11.0",
		"mocha": "^2.4.5"
	},
	"dependencies": {
		"vscode-languageclient": "^1.1.0",
		"vscode-extension-telemetry": "^0.0.5"
	}
}